const express = require("express")
const router = express.Router()
const multer = require("multer")//To read request form data
const { getNotes, addNotes, deleteNotes } = require("../controllers/listController")

/**
 * @swagger
 * components:
 *  schemas: 
 *    Note:
 *      type: object
 *      required:
 *        - description
 *      properties:
 *        _id:
 *          type: string
 *          description: Generated by MongoDB, do not update this manually
 *        id:
 *          type: string
 *          description: Generated by React when a new note is created
 *        description: 
 *          type: string
 *          description: The note to store. In the meantime this is the key so each description should be unique but this must be changed later
 *      example:
 *        _id: 662425bdeaf4daf9429536e0
 *        id: 12
 *        description: "Make food"
 * 
 *    addNewNote:
 *      type: object
 *      properties:
 *          newNotes:
 *              type: string
 *              description: Here a new note
 *    createNoteResponse:
 *      type: object
 *      description: createNoteResponse describes a response from the AddNote endpoint, returns string "Added Successfully"
 */

/** 
 * tags:
 *  name: Notes
 *  description: Notes endpoints
*/

/** 
 * @swagger
 * /api/todoapp/GetNotes:
 *      get:
 *          summary: Returns all notes storaged from MongoDB database
 *          tags: [ Notes ]
 *          responses:
 *              200:
 *                  description: List of notes
 *                  content: 
 *                      application/json:
 *                          schema:
 *                              type: array
 *                              items: 
 *                                  $ref: '#/components/schemas/Note'
 */
router.get( '/GetNotes',  getNotes );

/** 
 * @swagger
 * /api/todoapp/AddNotes:
 *      post:
 *          summary: Add a new note
 *          tags: [ Notes ]
 *          consumes: 
 *              - multipart/form-data
 *          requestBody:
 *              content:
 *                  multipart/form-data:
 *                      schema:
 *                         $ref: '#components/schemas/addNewNote'
 *                          
 *          responses:
 *              200:
 *                  description: Added Successfully 
 *                  content: 
 *                      form-data:
 *                          schema:
 *                             $ref: '#/components/schemas/createNoteResponse'
 * 
*/

router.post( '/AddNotes', multer().none(), addNotes );

router.delete( '/DeleteNotes', deleteNotes );

module.exports = router;